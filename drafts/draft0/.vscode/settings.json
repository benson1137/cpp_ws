{
    "files.associations": {
        "array": "cpp",
        "atomic": "cpp",
        "*.tcc": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "optional": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "typeinfo": "cpp"
    },
    "C_Cpp.default.configurationProvider": "vector-of-bool.cmake-tools",
    // highest complexity level will be set when it exceeds 15
    "codemetrics.basics.ComplexityLevelExtreme": 1,
    // Hides code lenses with complexity lesser than the given value
    "codemetrics.basics.CodeLensHiddenUnder": 0,
    // Description for the highest complexity level
    // "codemetrics.basics.ComplexityLevelExtremeDescription": "OMG split this up!",
    // someone uses 'any', it must be punished
    // "codemetrics.nodeconfiguration.AnyKeyword": 100,
    // "codemetrics.nodeconfiguration.ReturnStatement": 0,
    // "codemetrics.nodeconfiguration.CaseClause": 0,
    // "codemetrics.nodeconfiguration.DefaultClause": 0,
    // 网上复制的
    "codemetrics.basics.ComplexityLevelExtremeDescription": "代码需要优化",
    "codemetrics.nodeconfiguration.AnyKeyword": 150,
    "codemetrics.nodeconfiguration.AnyKeywordDescription": "尽量控制在150个字符内",
    "codemetrics.basics.ComplexityLevelHighDescription": "代码质量不错",
    "codemetrics.basics.ComplexityLevelLow": 1,
    "codemetrics.basics.ComplexityLevelLowDescription": "代码已优化",
    "codemetrics.basics.DiagnosticsEnabled": true,
    "codemetrics.basics.ComplexityLevelNormalDescription": "代码达标",
    "codemetrics.nodeconfiguration.CallExpressionDescription": "Cakoexpression",
    "codemetrics.nodeconfiguration.BreakStatementDescription": "Break atement",
    "codemetrics.nodeconfiguration.CaseClauseDescription": "Case 语句",
    "codemetrics.nodeconfiguration.JsxSelfClosingElementDescription": "Jsx元素闭合",
    "codemetrics.nodeconfiguration.JsxElementDescription": "这是Jsx元素",
    "codemetrics.nodeconfiguration.LabeledStatementDescription": "标记语句",
    "codemetrics.nodeconfiguration.MethodDeclarationDescription": "方法声明",
    "codemetrics.nodeconfiguration.MethodSignatureDescription": "Method Signature",
    "codemetrics.nodeconfiguration.NamedImports": 1,
    "codemetrics.nodeconfiguration.ModuleDeclaration": 1,
    "codemetrics.nodeconfiguration.ModuleDeclarationDescription": "模块声明",
    "codemetrics.nodeconfiguration.NamedImportsDescription": "命名导入",
    "codemetrics.nodeconfiguration.NamespaceImport": 1,
    "codemetrics.nodeconfiguration.NamespaceImportDescription": "命名空间导入",
    "codemetrics.nodeconfiguration.SwitchStatementDescription": "Switch 语句",
    "codemetrics.nodeconfiguration.ThrowStatementDescription": "Throw语句",
    "codemetrics.nodeconfiguration.TryStatementDescription": "Try catch语句",
    "codemetrics.nodeconfiguration.VariableStatementDescription": "变量声明",
    "codemetrics.nodeconfiguration.VariableStatement": 1,
    "codemetrics.nodeconfiguration.ClassDeclarationDescription": "类声明",
    "codemetrics.nodeconfiguration.ClassDeclaration": 1,
    "codemetrics.nodeconfiguration.ReturnStatementDescription": "返回语句",
    "codemetrics.nodeconfiguration.IfStatementDescription": "if 语句",
    "codemetrics.nodeconfiguration.ArrowFunctionDescription": "箭头函数",
    "codemetrics.nodeconfiguration.ConditionalExpressionDescription": "三目运算语句",
    "codemetrics.nodeconfiguration.CatchClauseDescription": "Catch Case语句",
    "codemetrics.nodeconfiguration.ConstructorDescription": "构造函数",
    "codemetrics.basics.ComplexityLevelNormal": 3,
    "codemetrics.basics.ComplexityTemplate": "圈复杂度为 {0}，{1}",
    "codemetrics.basics.ComplexityColorExtreme": "#ff0000",
    "codemetrics.basics.ComplexityColorHigh": "#e6a23c",
    "codemetrics.basics.ComplexityColorNormal": "#4bb14f",
}